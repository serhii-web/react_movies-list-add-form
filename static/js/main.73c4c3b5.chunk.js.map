{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regEx","NewMovie","state","value","error","checkValid","e","target","name","setState","length","checkValidbUrls","test","handeleSubmit","preventDefault","Object","values","every","obj","newMovie","props","addMovie","changeState","this","onSubmit","type","placeholder","onChange","onBlur","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCrBJK,G,MAAQ,sKAEDC,EAAb,4MACEC,MAAQ,CACNjB,MAAO,CACLkB,MAAO,GACPC,OAAO,GAETlB,YAAa,CACXiB,MAAO,GACPC,OAAO,GAETjB,OAAQ,CACNgB,MAAO,GACPC,OAAO,GAEThB,QAAS,CACPe,MAAO,GACPC,OAAO,GAETL,OAAQ,CACNI,MAAO,GACPC,OAAO,IApBb,EAwBEC,WAAa,SAACC,GACZ,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAML,EAAd,EAAcA,MAEd,EAAKM,SAAL,eACGD,EAAO,CACNL,QACAC,MAAOD,EAAMO,OAAS,MA9B9B,EAmCEC,gBAAkB,SAACL,GACjB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAML,EAAd,EAAcA,MAEd,EAAKM,SAAL,eACGD,EAAO,CACNL,QACAC,OAAQJ,EAAMY,KAAKT,OAzC3B,EA8CEU,cAAgB,SAACP,GACfA,EAAEQ,iBACF,MAAwD,EAAKZ,MAArDjB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,QAASW,EAA7C,EAA6CA,OAK7C,GAJgBgB,OAAOC,OAAO,EAAKd,OAAOe,OACxC,SAAAC,GAAG,OAAKA,EAAId,OAASc,EAAIf,MAAMO,UAGpB,CACX,IAAMS,EAAW,CACflC,MAAOA,EAAMkB,MACbjB,YAAaA,EAAYiB,MACzBhB,OAAQA,EAAOgB,MACff,QAASA,EAAQe,MACjBJ,OAAQA,EAAOI,OAGjB,EAAKiB,MAAMC,SAASF,GAEpB,EAAKV,SAAS,CACZxB,MAAO,CACLkB,MAAO,GACPC,OAAO,GAETlB,YAAa,CACXiB,MAAO,GACPC,OAAO,GAETjB,OAAQ,CACNgB,MAAO,GACPC,OAAO,GAEThB,QAAS,CACPe,MAAO,GACPC,OAAO,GAETL,OAAQ,CACNI,MAAO,GACPC,OAAO,OAnFjB,EAyFEkB,YAAc,SAAChB,GACb,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAML,EAAd,EAAcA,MAEd,EAAKM,SAAL,eACGD,EAAO,CACNL,QACAC,OAAO,MA/Ff,4CAoGE,WACE,MAAwDmB,KAAKrB,MAArDjB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,QAASW,EAA7C,EAA6CA,OAE7C,OACE,yBAAKV,UAAU,SACb,0BAAMmC,SAAUD,KAAKV,cAAexB,UAAU,eAC5C,6BACE,iDAEF,yBAAKA,UAAU,UACb,yBAAKA,UAAU,mBACb,2BACEoC,KAAK,OACLjB,KAAK,QACLkB,YAAY,QACZvB,MAAOlB,EAAMkB,MACbwB,SAAUJ,KAAKD,YACfM,OAAQL,KAAKlB,aAEdpB,EAAMmB,OACH,0BAAMf,UAAU,SAAhB,kBAEN,yBAAKA,UAAU,mBACb,2BACEoC,KAAK,OACLjB,KAAK,cACLkB,YAAY,cACZvB,MAAOjB,EAAYiB,MACnBwB,SAAUJ,KAAKD,YACfM,OAAQL,KAAKlB,aAEdnB,EAAYkB,OACR,0BAAMf,UAAU,SAAhB,kBAEP,yBAAKA,UAAU,mBACb,2BACEoC,KAAK,OACLjB,KAAK,SACLkB,YAAY,SACZvB,MAAOhB,EAAOgB,MACdwB,SAAUJ,KAAKD,YACfM,OAAQL,KAAKZ,kBAEdxB,EAAOiB,OACH,0BAAMf,UAAU,SAAhB,kBAEP,yBAAKA,UAAU,mBACb,2BACEoC,KAAK,OACLjB,KAAK,UACLkB,YAAY,UACZvB,MAAOf,EAAQe,MACfwB,SAAUJ,KAAKD,YACfM,OAAQL,KAAKZ,kBAEdvB,EAAQgB,OACJ,0BAAMf,UAAU,SAAhB,kBAEP,yBAAKA,UAAU,mBACb,2BACEoC,KAAK,OACLjB,KAAK,SACLkB,YAAY,SACZvB,MAAOJ,EAAOI,MACdwB,SAAUJ,KAAKD,YACfM,OAAQL,KAAKlB,aAEdN,EAAOK,OACH,0BAAMf,UAAU,SAAhB,mBAGT,4BAAQoC,KAAK,SAASpC,UAAU,UAAhC,mBA3KV,GAA8BwC,a,OCDjBC,EAAb,4MACE5B,MAAQ,CACNP,OAAQoC,GAFZ,EAKEV,SAAW,SAACxB,GAEV,EAAKY,UAAS,SAAAP,GAAK,MAAK,CACtBP,OAAO,GAAD,mBAAMO,EAAMP,QAAZ,CAAoBE,SARhC,4CAYE,WACE,IAAQF,EAAW4B,KAAKrB,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUgC,SAAUE,KAAKF,iBArBnC,GAAyBQ,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.73c4c3b5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line\nconst regEx = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: {\n      value: '',\n      error: false,\n    },\n    description: {\n      value: '',\n      error: false,\n    },\n    imgUrl: {\n      value: '',\n      error: false,\n    },\n    imdbUrl: {\n      value: '',\n      error: false,\n    },\n    imdbId: {\n      value: '',\n      error: false,\n    },\n  };\n\n  checkValid = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: {\n        value,\n        error: value.length < 2,\n      },\n    });\n  }\n\n  checkValidbUrls = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: {\n        value,\n        error: !regEx.test(value),\n      },\n    });\n  }\n\n  handeleSubmit = (e) => {\n    e.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const isValid = Object.values(this.state).every(\n      obj => !obj.error && obj.value.length,\n    );\n\n    if (isValid) {\n      const newMovie = {\n        title: title.value,\n        description: description.value,\n        imgUrl: imgUrl.value,\n        imdbUrl: imdbUrl.value,\n        imdbId: imdbId.value,\n      };\n\n      this.props.addMovie(newMovie);\n\n      this.setState({\n        title: {\n          value: '',\n          error: false,\n        },\n        description: {\n          value: '',\n          error: false,\n        },\n        imgUrl: {\n          value: '',\n          error: false,\n        },\n        imdbUrl: {\n          value: '',\n          error: false,\n        },\n        imdbId: {\n          value: '',\n          error: false,\n        },\n      });\n    }\n  }\n\n  changeState = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: {\n        value,\n        error: false,\n      },\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <div className=\"block\">\n        <form onSubmit={this.handeleSubmit} className=\"block__form\">\n          <div>\n            <p>Put the form here</p>\n          </div>\n          <div className=\"inputs\">\n            <div className=\"container-input\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                value={title.value}\n                onChange={this.changeState}\n                onBlur={this.checkValid}\n              />\n              {title.error\n               && <span className=\"error\">Invalid input</span>}\n            </div>\n            <div className=\"container-input\">\n              <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={description.value}\n                onChange={this.changeState}\n                onBlur={this.checkValid}\n              />\n              {description.error\n                && <span className=\"error\">Invalid input</span>}\n            </div>\n            <div className=\"container-input\">\n              <input\n                type=\"text\"\n                name=\"imgUrl\"\n                placeholder=\"ImgUrl\"\n                value={imgUrl.value}\n                onChange={this.changeState}\n                onBlur={this.checkValidbUrls}\n              />\n              {imgUrl.error\n                && <span className=\"error\">Invalid input</span>}\n            </div>\n            <div className=\"container-input\">\n              <input\n                type=\"text\"\n                name=\"imdbUrl\"\n                placeholder=\"imdbUrl\"\n                value={imdbUrl.value}\n                onChange={this.changeState}\n                onBlur={this.checkValidbUrls}\n              />\n              {imdbUrl.error\n                && <span className=\"error\">Invalid input</span>}\n            </div>\n            <div className=\"container-input\">\n              <input\n                type=\"text\"\n                name=\"imdbId\"\n                placeholder=\"ImdbId\"\n                value={imdbId.value}\n                onChange={this.changeState}\n                onBlur={this.checkValid}\n              />\n              {imdbId.error\n                && <span className=\"error\">Invalid input</span>}\n            </div>\n          </div>\n          <button type=\"submit\" className=\"button\">Add Movie</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    // put your code here\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}